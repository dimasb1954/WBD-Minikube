services:
  db:
    image: postgres:latest
    container_name: linkinpurry-db
    env_file: ./backend/.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "9091:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: backend/compose-Dockerfile
    container_name: linkinpurry-backend
    ports:
      - "${PORT}:${PORT}"
    environment:
      - NODE_ENV=development
      - PORT=${PORT}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
    env_file: ./backend/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend/prisma:/home/node/app/prisma
      - ./backend/src:/home/node/app/src
      - ./backend/node_modules:/home/node/app/node_modules
    networks:
      - app-network
    restart: unless-stopped

  redis:
    container_name: linkinpurry-redis
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: linkinpurry-frontend
    environment:
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
    ports:
      - "5137:5137"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: